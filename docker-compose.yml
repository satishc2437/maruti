version: '3.8'

services:
  maruti-dev:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: maruti-development
    volumes:
      # Mount the project directory for live development
      - .:/app
      # Mount a persistent volume for Python packages cache
      - maruti-uv-cache:/root/.cache/uv
      # Mount a volume for Git config persistence
      - maruti-git-config:/root/.gitconfig
    ports:
      # Common development ports
      - "8000:8000"   # MCP servers
      - "8080:8080"   # Alternative web server
      - "3000:3000"   # Frontend development
      - "5000:5000"   # Flask/FastAPI development
    environment:
      - PYTHONPATH=/app
      - UV_PROJECT_ENVIRONMENT=/app/.venv
      - PYTHONUNBUFFERED=1
    stdin_open: true
    tty: true
    working_dir: /app
    command: >
      bash -c "
        echo 'Starting Maruti Development Environment...';
        echo 'Installing/updating dependencies...';
        uv sync --dev;
        echo 'Development environment ready!';
        echo 'Use: docker exec -it maruti-development bash';
        echo 'To connect to the development container.';
        while true; do sleep 30; echo 'Container alive...'; done
      "

  # Optional: Separate service for running tests
  maruti-test:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: maruti-test
    volumes:
      - .:/app
      - maruti-uv-cache:/root/.cache/uv
    working_dir: /app
    profiles: ["test"]
    command: >
      bash -c "
        echo 'Running tests...';
        uv sync --dev;
        uv run pytest pdf-reader/test_pdf.py;
        uv run pytest xlsx-reader/test_server.py;
        echo 'Tests completed.';
      "

volumes:
  maruti-uv-cache:
    driver: local
  maruti-git-config:
    driver: local